module.exports = {
  configs: {
    recommended: {
      extends: ['eslint:recommended'],
      plugins: ['import', 'sort-exports', 'jsdoc'],
      env: { node: true, browser: true, jest: true, es6: true },
      parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
      rules: {
        'no-constant-condition': 'off',
        'import/no-duplicates': 'error',
        'import/no-unresolved': ['error', { commonjs: true, caseSensitive: true, caseSensitiveStrict: true }],
        'import/newline-after-import': ['error', { count: 1, considerComments: true }],
        'import/first': 'error',
        'import/exports-last': 'error',
        'import/extensions': ['error', 'never', { js: 'always' }],
        'import/order': [
          'error',
          {
            pathGroups: [
              { pattern: 'react', group: 'builtin' },
              { pattern: '@*/**', group: 'internal' },
            ],
            pathGroupsExcludedImportTypes: ['react'],
            'newlines-between': 'never',
            groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index', 'object', 'type'],
            alphabetize: { order: 'asc', caseInsensitive: true },
          },
        ],
        'sort-imports': [
          'error',
          {
            ignoreCase: false,
            ignoreDeclarationSort: true,
            ignoreMemberSort: false,
            memberSyntaxSortOrder: ['all', 'single', 'multiple', 'none'],
            allowSeparatedGroups: false,
          },
        ],
        'sort-exports/sort-exports': ['error', { sortDir: 'asc' }],
        'jsdoc/check-access': 'warn',
        'jsdoc/check-alignment': 'warn',
        'jsdoc/check-indentation': ['warn', { excludeTags: ['param', 'returns', 'example'] }],
        'jsdoc/check-line-alignment': 'warn',
        'jsdoc/check-param-names': 'warn',
        'jsdoc/check-property-names': 'warn',
        'jsdoc/check-syntax': 'warn',
        'jsdoc/check-tag-names': 'warn',
        'jsdoc/check-types': 'warn',
        'jsdoc/check-values': 'warn',
        'jsdoc/empty-tags': 'warn',
        'jsdoc/implements-on-classes': 'warn',
        'jsdoc/informative-docs': 'warn',
        'jsdoc/match-description': [
          'warn',
          { matchDescription: '^\n?([*A-Z`\\d_][\\s\\S]*([.?!`]|\\*\\w+\\*{1,3})\\s*)?$' },
        ],
        'jsdoc/multiline-blocks': ['error', { noSingleLineBlocks: true, singleLineTags: ['*'] }],
        'jsdoc/no-bad-blocks': 'warn',
        'jsdoc/no-blank-block-descriptions': 'warn',
        'jsdoc/no-defaults': 'warn',
        'jsdoc/no-multi-asterisks': ['warn', { allowWhitespace: true }],
        'jsdoc/no-undefined-types': 'warn',
        'jsdoc/require-asterisk-prefix': 'warn',
        'jsdoc/require-hyphen-before-param-description': 'warn',
        'jsdoc/require-param': 'warn',
        'jsdoc/require-param-name': 'warn',
        'jsdoc/require-param-type': 'warn',
        'jsdoc/require-property': 'warn',
        'jsdoc/require-property-name': 'warn',
        'jsdoc/require-property-type': 'warn',
        'jsdoc/require-returns-check': 'warn',
        'jsdoc/require-returns-type': 'warn',
        'jsdoc/require-throws': 'warn',
        'jsdoc/require-yields': 'warn',
        'jsdoc/require-yields-check': 'warn',
        'jsdoc/sort-tags': 'warn',
        'jsdoc/tag-lines': ['warn', 'always', { count: 0, applyToEndTag: false }],
        'jsdoc/valid-types': 'warn',
      },
    },
  },
  rules: {
    'array-bracket-spacing': ['error', 'never'],
    'arrow-body-style': 'error',
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', { before: false, after: true }],
    'comma-style': ['error', 'last'],
    'computed-property-spacing': ['error', 'never'],
    'max-len': [
      'error',
      {
        code: 120,
        tabWidth: 2,
        ignoreComments: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true,
        ignoreUrls: true,
      },
    ],
    'no-debugger': 'warn',
    'no-multiple-empty-lines': ['error', { max: 1 }],
    'no-tabs': ['error', { allowIndentationTabs: false }],
    'no-trailing-spaces': 'error',
    'no-multi-spaces': ['error', { exceptions: { Property: false } }],
    'no-unused-vars': [
      'error',
      {
        vars: 'all',
        args: 'all',
        argsIgnorePattern: '(^_|^req$|^res$|^next$)',
        caughtErrors: 'all',
        caughtErrorsIgnorePattern: '^_',
        destructuredArrayIgnorePattern: '^_',
        ignoreRestSiblings: false,
        varsIgnorePattern: '^React$',
      },
    ],
    'object-curly-spacing': ['error', 'always'],
    'object-shorthand': 'error',
    'prefer-arrow-callback': ['error', { allowUnboundThis: true }],
    'prefer-destructuring': 'error',
    'prefer-const': 'error',
    'prefer-template': 'error',
    quotes: ['error', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
    'space-in-parens': ['error', 'never'],
  },
};
